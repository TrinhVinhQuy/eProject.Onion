@{
    ViewData["Title"] = "Đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section Styles {
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
}
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <p class="m-0 font-weight-bold text-primary">Tình trạng đơn hàng</p>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="dataTable" class="table table-bordered" width="100%" style="min-width: 700px" cellspacing="0">
                <thead>
                    <tr>
                        <th>Mã dơn hàng</th>
                        <th>Tên khách hàng</th>
                        <th>Tỉnh / Thành phố: </th>
                        <th>Quận / Huyện: </th>
                        <th>Phường / Xã</th>
                        <th>Địa chỉ/ Số nhà</th>
                        <th>Thời gian</th>
                        <th>Phương thức thanh toán</th>
                        <th>Trạng thái</th>
                        <th>#</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="myModalUpdate" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Thông tin chi tiết đơn hàng</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <div>
                    <label for="descriptionUpdate">Sản phẩm</label>
                    <div class="table-responsive">
                        <table class="table table-bordered" style="min-width:600px">
                            <thead>
                                <tr>
                                    <th>Hình ảnh</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Số lượng</th>
                                    <th>Đơn giá</th>
                                </tr>
                            </thead>
                            <tbody id="orderDetailsBody">
                                <!-- Order details will be dynamically inserted here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>

        </div>
    </div>
</div>


@section Scripts {
    <!-- Data địa chỉ -->
    <script src="~/assets/js/data.json"></script>
    <!-- Thư viện real-time Signalr -->
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@@5.0.0/dist/browser/signalr.min.js"></script>
    <!-- DataTables JS -->
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#dataTable').DataTable({
                "ajax": {
                    "url": "/admin/json-order",
                    "dataSrc": ""
                },
                "columns": [
                    { "data": "id" },
                    { "data": "fullName" },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return getProvinceName(row.province)
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return getDistrictName(row.province, row.district)
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return getTownName(row.province, row.district, row.town)
                        }
                    },
                    { "data": "address" },
                    {
                        "data": "createOn",
                        "render": function (data, type, row) {
                            return moment(data).format('DD/MM/YYYY HH:mm:ss'); // Định dạng thời gian theo định dạng mong muốn
                        }
                    },
                    {
                        "data": "paymentMethod",
                        "render": function (data, type, row) {
                            switch (data) {
                                case 1: // New
                                    return '<span class="text-muted">Cod</span>';
                                case 2: // Processing
                                    return '<span class="text-muted">VnPay</span>';
                                default:
                                    return '<span class="text-muted">Trạng thái không xác định</span>';
                            }
                        }
                    },
                    {
                        "data": "statusProcessing",
                        "render": function (data, type, row) {
                            switch (data) {
                                case 0: // None
                                    return '<span class="text-muted">Chưa có trạng thái</span>';
                                case 1: // New
                                    return '<a href="javascript:void(0)" class="m-0 font-weight-bold text-primary" onclick="Delivery(' + row.id + ')">Lên đơn</a>';
                                case 2: // Processing
                                    return '<a href="javascript:void(0)" style="margin-right: 10px" class="font-weight-bold text-primary" onclick="DeliveryStatus(\'' + row.id + '\', 4)">Giao thành công</a> <span>/</span>' +
                                        '<a href="javascript:void(0)" style="margin-left: 10px" class="font-weight-bold text-primary" onclick="DeliveryStatus(\'' + row.id + '\', 3)">Giao thất bại</a>';
                                case 3: // Cancel
                                    return '<span class="text-danger">Đã hủy</span>';
                                case 4: // Complete
                                    return '<span style="color:#208b65">Hoàn thành!</span>';
                                default:
                                    return '<span class="text-muted">Trạng thái không xác định</span>';
                            }
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return '<a href="javascript:void(0)" class="m-0 font-weight-bold text-primary" onclick="OrderDetail(\'' + data.id + '\')">Chi tiết</a>';
                        }
                    }
                ],
                "order": [
                    [6, 'desc'] // Sắp xếp cột đầu tiên (cột ID) theo thứ tự giảm dần
                ],
                "lengthMenu": [25, 50],
                "language": {
                    processing: "Message khi đang tải dữ liệu",
                    search: "Tìm kiếm",
                    lengthMenu: "Điều chỉnh số mục trên 1 trang _MENU_ ",
                    info: "Hiển thị _START_ đến _END_ trong  _TOTAL_ mục",
                    infoEmpty: "Không có dữ liệu, Hiển thị 0 bản ghi trong _MAX_ tổng cộng 0 ",
                    infoFiltered: "(Không có sản phẩm trong _MAX_ bản ghi)",
                    loadingRecords: "",
                    zeroRecords: "Không có dữ liệu theo tìm kiếm",
                    emptyTable: "Hiện tại chưa có đơn hàng mới",
                    paginate: {
                        first: "<<",
                        previous: "<",
                        next: ">",
                        last: ">>"
                    },
                    aria: {
                        sortAscending: ": Message khi đang sắp xếp theo column",
                        sortDescending: ": Message khi đang sắp xếp theo column",
                    }
                },
                "processing": true,
                "serverSide": false,
            });
        });
    </script>

    <script>
        var listprodvince = JSON.parse(data);
        function getProvinceName(provinceCode) {
            // Tìm tên của tỉnh/thành phố từ mã tỉnh/thành phố
            var index = listprodvince.findIndex(function (item) {
                return item.code == provinceCode;
            });
            return (index !== -1) ? listprodvince[index].name : '';
        }
        function getDistrictName(provinceCode, districtCode) {
            var provinceIndex = listprodvince.findIndex(function (item) {
                return item.code == provinceCode;
            });
            if (provinceIndex !== -1) {
                var districtIndex = listprodvince[provinceIndex].districts.findIndex(function (item) {
                    return item.code == districtCode;
                });
                return (districtIndex !== -1) ? listprodvince[provinceIndex].districts[districtIndex].name : '';
            }
            return '';
        }

        function getTownName(provinceCode, districtCode, townCode) {
            var provinceIndex = listprodvince.findIndex(function (item) {
                return item.code == provinceCode;
            });
            if (provinceIndex !== -1) {
                var districtIndex = listprodvince[provinceIndex].districts.findIndex(function (item) {
                    return item.code == districtCode;
                });
                if (districtIndex !== -1) {
                    var townIndex = listprodvince[provinceIndex].districts[districtIndex].wards.findIndex(function (item) {
                        return item.code == townCode;
                    });
                    return (townIndex !== -1) ? listprodvince[provinceIndex].districts[districtIndex].wards[townIndex].name : '';
                }
            }
            return '';
        }
        function OrderDetail(Id) {
            $.ajax({
                url: '/admin/json-order-detail/' + Id,
                type: 'get', // Sửa type từ 'post' thành 'get'
                success: function (response) {
                    console.log(response)
                    // Xử lý dữ liệu sản phẩm
                    var products = response.products;
                    var tableBody = $('#orderDetailsBody');
                    tableBody.empty(); // Xóa nội dung cũ trong bảng

                    $.each(response, function (index, product) {
                        var row = '<tr>' +
                            '<td><img src="' + product.productLink + '" alt="' + product.productName + '" style="max-width: 100px;"></td>' +
                            '<td>' + product.productName + '</td>' +
                            '<td>' + product.quanlity + '</td>' +
                            '<td>' + product.unitPrice + '</td>' +
                            '</tr>';
                        tableBody.append(row); // Thêm hàng mới vào bảng
                    });
                    $('#myModalUpdate').modal('show');
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi nếu cần
                    console.error(xhr.responseText);
                }
            });
        }
    </script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();
        connection.on("OrderHub", function () {
            showAlertModal('success', "Đã có đơn đặt hàng mới!");
            $('#dataTable').DataTable().ajax.reload();
        });

        // Hàm để khởi động lại kết nối
        function startConnection() {
            connection.start().then(function () {
                console.log("Connection started");
            }).catch(function (err) {
                console.error("Error while starting connection: " + err);
                // Nếu không thể kết nối, thực hiện tái kết nối sau một khoảng thời gian
                setTimeout(startConnection, 5000); // Ví dụ: kết nối lại sau 5 giây
            });
        }

        // Khởi động kết nối ban đầu
        startConnection();

        // Xử lý sự kiện khi kết nối bị đóng
        connection.onclose(function (error) {
            console.log("Connection closed: " + error);
            // Nếu kết nối bị đóng, thực hiện tái kết nối sau một khoảng thời gian
            setTimeout(startConnection, 5000); // Ví dụ: kết nối lại sau 5 giây
        });
    </script>
    <script>
        function DeliveryStatus(Id, StatusProcessing) {
            // Hiển thị hộp thoại xác nhận trước khi gửi yêu cầu
            var confirmation = confirm("Bạn có chắc chắn muốn cập nhật tình trạng đơn hàng không?");
            if (confirmation) {
                var formData = new FormData();
                formData.append('Id', Id);
                formData.append('StatusProcessing', StatusProcessing);
                $.ajax({
                    url: '/admin/json-order-status-processing',
                    type: 'Post',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            $('#dataTable').DataTable().ajax.reload();
                            showAlertModal('success', response.message);
                        }
                    },
                    error: function () {
                        showAlertModal('danger', 'Có lỗi xảy ra khi gửi yêu cầu!');
                    }
                });
            }
        }
    </script>
}

